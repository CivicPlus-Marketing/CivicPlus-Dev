import { __decorate, __metadata } from "tslib";
import { jsx as _jsx } from "react/jsx-runtime";
import { bind } from '@roots/bud-framework/extension/decorators';
import { Command, Option } from '@roots/bud-support/clipanion';
import { dry } from '@roots/bud/cli/decorators/dry';
import indent from '@roots/bud/cli/flags/indent';
import BudCommand from '../bud.js';
/**
 * `bud repl`
 */
let BudReplCommand = class BudReplCommand extends BudCommand {
    /**
     * {@link Command.paths}
     */
    static paths = [[`repl`]];
    /**
     * {@link Command.usage}
     */
    static usage = Command.Usage({
        description: `Use bud in a repl`,
        examples: [[`repl`, `$0 repl`]],
    });
    depth = Option.String(`--depth,-d`, `1`, {
        description: `recursion depth`,
        tolerateBoolean: false,
    });
    indent = indent;
    /**
     * {@link Command.execute}
     */
    async execute() {
        await this.makeBud();
        await this.bud.run();
        const { Repl } = await import(`./Repl.js`);
        this.render(_jsx(Repl, { app: this.bud, depth: this.depth, indent: this.indent }));
    }
};
__decorate([
    bind,
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], BudReplCommand.prototype, "execute", null);
BudReplCommand = __decorate([
    dry
], BudReplCommand);
export default BudReplCommand;
