import type { Context } from '@roots/bud-framework/options/context';
import BudCommand from '@roots/bud/cli/commands/bud';
/**
 * `bud build` command
 */
export default class BudBuildCommand extends BudCommand {
    /**
     * {@link Command.paths}
     */
    static paths: string[][];
    /**
     * {@link Command.usage}
     */
    static usage: import("@roots/bud-support/clipanion").Usage;
    cache: boolean | "filesystem" | "memory";
    ci: boolean;
    clean: boolean;
    devtool: false | "cheap-module-source-map" | "cheap-source-map" | "eval-cheap-module-source-map" | "eval-cheap-source-map" | "eval-nosources-cheap-modules-source-map" | "eval-nosources-cheap-source-map" | "eval-nosources-source-map" | "eval-source-map" | "eval" | "hidden-cheap-module-source-map" | "hidden-cheap-source-map" | "hidden-nosources-cheap-module-source-map" | "hidden-nosources-cheap-source-map" | "hidden-nosources-source-map" | "hidden-source-map" | "inline-cheap-module-source-map" | "inline-cheap-source-map" | "inline-nosources-cheap-module-source-map" | "inline-nosources-cheap-source-map" | "inline-nosources-source-map" | "inline-source-map" | "nosources-cheap-module-source-map" | "nosources-cheap-source-map" | "source-map";
    discover: boolean;
    dry: boolean;
    editor: string | boolean;
    esm: boolean;
    force: boolean;
    hash: boolean;
    html: string | boolean;
    immutable: boolean;
    input: string;
    minimize: boolean;
    output: string;
    publicPath: string;
    runtime: boolean | "multiple" | "single";
    silent: boolean;
    splitChunks: boolean;
    storage: string;
    use: string[];
    /**
     * {@link Command.withContext}
     */
    withContext: (context: Context) => Promise<{
        cache: boolean | "filesystem" | "memory";
        ci: boolean;
        clean: boolean;
        debug: boolean;
        devtool: false | "cheap-module-source-map" | "cheap-source-map" | "eval-cheap-module-source-map" | "eval-cheap-source-map" | "eval-nosources-cheap-modules-source-map" | "eval-nosources-cheap-source-map" | "eval-nosources-source-map" | "eval-source-map" | "eval" | "hidden-cheap-module-source-map" | "hidden-cheap-source-map" | "hidden-nosources-cheap-module-source-map" | "hidden-nosources-cheap-source-map" | "hidden-nosources-source-map" | "hidden-source-map" | "inline-cheap-module-source-map" | "inline-cheap-source-map" | "inline-nosources-cheap-module-source-map" | "inline-nosources-cheap-source-map" | "inline-nosources-source-map" | "inline-source-map" | "nosources-cheap-module-source-map" | "nosources-cheap-source-map" | "source-map";
        discover: boolean;
        editor: string | boolean;
        esm: boolean;
        force: boolean;
        hash: boolean;
        html: string | boolean;
        immutable: boolean;
        input: string;
        minimize: boolean;
        output: string;
        publicPath: string;
        runtime: boolean | "multiple" | "single";
        silent: boolean;
        splitChunks: boolean;
        storage: string;
        target: string[];
        use: string[];
        _?: Record<string, any>;
        basedir: string;
        bin?: "node" | "bun" | "ts-node";
        browser?: string | boolean;
        bud: {
            label: string;
            manifestPath: string;
            version: string;
        };
        dependsOn?: string[];
        dry?: boolean;
        env: Record<string, string>;
        extensions: {
            builtIn: string[];
            discovered: string[];
        };
        files: Record<string, import("@roots/bud-framework/options/context").File>;
        filter?: string[];
        hot?: boolean;
        indicator?: boolean;
        label?: string;
        log?: boolean;
        manifest: Record<string, any>;
        mode: "development" | "production";
        modules?: string;
        notify?: boolean;
        overlay?: boolean;
        paths?: {
            "os-cache": string;
            "os-config": string;
            "os-data": string;
            "os-log": string;
            "os-temp": string;
            basedir: string;
            hash: string;
            storage: string;
        };
        port?: string;
        proxy?: string;
        reload?: boolean;
        root?: import("@roots/bud-framework").Bud;
        services: string[];
        verbose?: boolean;
    }>;
    /**
     * {@link Command.execute}
     */
    execute(): Promise<void>;
}
