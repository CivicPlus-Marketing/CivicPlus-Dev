var _a, _b, _c;
import { __decorate, __metadata } from "tslib";
import { bind } from '@roots/bud-support/decorators/bind';
import isFunction from '@roots/bud-support/lodash/isFunction';
export default class Base {
    _app;
    /**
     * Constructor
     */
    constructor(_app) {
        this._app = _app;
    }
    /**
     * Application getter
     *
     * @readonly @public
     */
    get app() {
        return this._app();
    }
    unwrap(maybeFunction, ...options) {
        return isFunction(maybeFunction)
            ? maybeFunction(this.app, ...options)
            : maybeFunction;
    }
    wrap(input) {
        return isFunction(input) ? input : () => input;
    }
}
__decorate([
    bind,
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object, Object]),
    __metadata("design:returntype", typeof (_b = typeof T !== "undefined" && T) === "function" ? _b : Object)
], Base.prototype, "unwrap", null);
__decorate([
    bind,
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Function)
], Base.prototype, "wrap", null);
